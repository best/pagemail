version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: pagemail_db
    environment:
      POSTGRES_DB: pagemail
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pagemail_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PageMail Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pagemail_backend
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=pagemail
      - DB_SSLMODE=disable
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME:-PageMail}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pagemail_network
    volumes:
      - ./files:/app/files

  # Frontend Development Server (Optional for development)
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    container_name: pagemail_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    networks:
      - pagemail_network
    profiles:
      - dev

volumes:
  postgres_data:

networks:
  pagemail_network:
    driver: bridge